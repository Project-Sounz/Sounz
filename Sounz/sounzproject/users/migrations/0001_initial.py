# Generated by Django 5.0.6 on 2025-03-11 19:28

import django.db.models.deletion
import users.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collab_Information_tabledb',
            fields=[
                ('collaboration_Id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('request_status', models.CharField(default='pending', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('collaboration_title', models.CharField(default='Untitled collaboration test', max_length=50)),
                ('base_plan', models.CharField(default=None, max_length=200)),
                ('collab_requestor', models.CharField(default=None, max_length=25)),
                ('collab_end', models.BooleanField(default=False)),
                ('owner_count', models.IntegerField(default=1)),
                ('accept_count', models.IntegerField(default=0)),
                ('temp_thumbnail', models.FileField(blank=True, default=None, null=True, upload_to='media/Thumbnails')),
                ('temp_caption', models.CharField(blank=True, default=None, max_length=30, null=True)),
                ('temp_descr', models.TextField(blank=True, default=None, null=True)),
                ('temp_mediaType', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('chat_history', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='collaborators_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collab_members', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Member_Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isOwner', models.BooleanField(default=False)),
                ('isApproved', models.BooleanField(default=False)),
                ('collaboration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.collab_information_tabledb')),
                ('post_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('collaboration', 'post_member')},
            },
        ),
        migrations.AddField(
            model_name='collab_information_tabledb',
            name='collaborated_members',
            field=models.ManyToManyField(through='users.Member_Information', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='postdb',
            fields=[
                ('pid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('media', models.FileField(upload_to='media/Posts')),
                ('media_thumbnail', models.FileField(blank=True, default=None, null=True, upload_to='media/Thumbnails')),
                ('caption', models.CharField(max_length=30)),
                ('descr', models.TextField()),
                ('langu', models.CharField(default='English', max_length=15)),
                ('mediatype', models.CharField(max_length=15)),
                ('location', models.CharField(max_length=15)),
                ('likes', models.IntegerField(default=0)),
                ('media_format', models.CharField(blank=True, max_length=20)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('isCollaborated', models.BooleanField(default=False)),
                ('collaboration', models.UUIDField(blank=True, default=None, null=True)),
                ('flagged', models.BooleanField(default=False)),
                ('flag_counter', models.IntegerField(default=0)),
                ('is_private', models.BooleanField(default=False)),
                ('collaborated_owners', models.ManyToManyField(through='users.collaborators_table', to=settings.AUTH_USER_MODEL)),
                ('reported_users', models.ManyToManyField(blank=True, related_name='reported_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='collaborators_table',
            name='post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.postdb'),
        ),
        migrations.AddField(
            model_name='collab_information_tabledb',
            name='base_post_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collab_base_posts', to='users.postdb'),
        ),
        migrations.AddField(
            model_name='collab_information_tabledb',
            name='endPost',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collab_end_posts', to='users.postdb'),
        ),
        migrations.CreateModel(
            name='profiledatadb',
            fields=[
                ('username', models.CharField(max_length=25, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=15)),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('profile_picture', models.ImageField(upload_to='media/Profiles')),
                ('user_bio', models.TextField()),
                ('phone', models.IntegerField(null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('insta', models.URLField(blank=True, null=True)),
                ('yout', models.URLField(blank=True, null=True)),
                ('twit', models.URLField(blank=True, null=True)),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='postdb',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profiledatadb'),
        ),
        migrations.CreateModel(
            name='saveddb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.postdb')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profiledatadb')),
            ],
        ),
        migrations.CreateModel(
            name='syncAudios_table',
            fields=[
                ('syncId', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('syncMedia', models.FileField(upload_to='media/syncAudios')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('audioName', models.CharField(default=users.models.generate_audio_name, max_length=50)),
                ('collaboration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.collab_information_tabledb')),
                ('syncedBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('like', 'Like'), ('collab', 'Collaboration Request'), ('flagged', 'Post Flagged')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('unread', 'Unread'), ('read', 'Read')], default='unread', max_length=10)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.postdb')),
            ],
            options={
                'indexes': [models.Index(fields=['recipient'], name='users_notif_recipie_b8cb28_idx'), models.Index(fields=['timestamp'], name='users_notif_timesta_eaa4cf_idx')],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_relation', to='users.postdb')),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='collaborators_table',
            unique_together={('post_id', 'collab_members')},
        ),
        migrations.CreateModel(
            name='Save',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='save_relation', to='users.postdb')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
    ]
